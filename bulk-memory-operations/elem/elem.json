{"source_filename": "elem.wast",
 "commands": [
  {"type": "module", "line": 4, "filename": "elem.0.wasm"}, 
  {"type": "module", "line": 68, "filename": "elem.1.wasm"}, 
  {"type": "module", "line": 76, "filename": "elem.2.wasm"}, 
  {"type": "module", "line": 81, "filename": "elem.3.wasm"}, 
  {"type": "module", "line": 87, "filename": "elem.4.wasm"}, 
  {"type": "module", "line": 96, "filename": "elem.5.wasm"}, 
  {"type": "module", "line": 106, "filename": "elem.6.wasm"}, 
  {"type": "module", "line": 113, "filename": "elem.7.wasm"}, 
  {"type": "module", "line": 120, "filename": "elem.8.wasm"}, 
  {"type": "assert_return", "line": 134, "action": {"type": "invoke", "field": "call-7", "args": []}, "expected": [{"type": "i32", "value": "65"}]}, 
  {"type": "assert_return", "line": 135, "action": {"type": "invoke", "field": "call-9", "args": []}, "expected": [{"type": "i32", "value": "66"}]}, 
  {"type": "module", "line": 139, "filename": "elem.9.wasm"}, 
  {"type": "module", "line": 144, "filename": "elem.10.wasm"}, 
  {"type": "module", "line": 150, "filename": "elem.11.wasm"}, 
  {"type": "module", "line": 154, "filename": "elem.12.wasm"}, 
  {"type": "module", "line": 159, "filename": "elem.13.wasm"}, 
  {"type": "module", "line": 164, "filename": "elem.14.wasm"}, 
  {"type": "module", "line": 169, "filename": "elem.15.wasm"}, 
  {"type": "module", "line": 175, "filename": "elem.16.wasm"}, 
  {"type": "module", "line": 181, "filename": "elem.17.wasm"}, 
  {"type": "module", "line": 187, "filename": "elem.18.wasm"}, 
  {"type": "assert_uninstantiable", "line": 196, "filename": "elem.19.wasm", "text": "out of bounds table access", "module_type": "binary"}, 
  {"type": "assert_uninstantiable", "line": 205, "filename": "elem.20.wasm", "text": "out of bounds table access", "module_type": "binary"}, 
  {"type": "assert_uninstantiable", "line": 214, "filename": "elem.21.wasm", "text": "out of bounds table access", "module_type": "binary"}, 
  {"type": "assert_uninstantiable", "line": 223, "filename": "elem.22.wasm", "text": "out of bounds table access", "module_type": "binary"}, 
  {"type": "assert_uninstantiable", "line": 230, "filename": "elem.23.wasm", "text": "out of bounds table access", "module_type": "binary"}, 
  {"type": "assert_uninstantiable", "line": 238, "filename": "elem.24.wasm", "text": "out of bounds table access", "module_type": "binary"}, 
  {"type": "assert_uninstantiable", "line": 247, "filename": "elem.25.wasm", "text": "out of bounds table access", "module_type": "binary"}, 
  {"type": "assert_uninstantiable", "line": 255, "filename": "elem.26.wasm", "text": "out of bounds table access", "module_type": "binary"}, 
  {"type": "assert_uninstantiable", "line": 264, "filename": "elem.27.wasm", "text": "out of bounds table access", "module_type": "binary"}, 
  {"type": "assert_uninstantiable", "line": 272, "filename": "elem.28.wasm", "text": "out of bounds table access", "module_type": "binary"}, 
  {"type": "assert_uninstantiable", "line": 281, "filename": "elem.29.wasm", "text": "out of bounds table access", "module_type": "binary"}, 
  {"type": "assert_uninstantiable", "line": 289, "filename": "elem.30.wasm", "text": "out of bounds table access", "module_type": "binary"}, 
  {"type": "assert_invalid", "line": 300, "filename": "elem.31.wasm", "text": "unknown table", "module_type": "binary"}, 
  {"type": "assert_invalid", "line": 310, "filename": "elem.32.wasm", "text": "type mismatch", "module_type": "binary"}, 
  {"type": "assert_invalid", "line": 318, "filename": "elem.33.wasm", "text": "constant expression required", "module_type": "binary"}, 
  {"type": "assert_invalid", "line": 326, "filename": "elem.34.wasm", "text": "constant expression required", "module_type": "binary"}, 
  {"type": "assert_invalid", "line": 334, "filename": "elem.35.wasm", "text": "constant expression required", "module_type": "binary"}, 
  {"type": "assert_invalid", "line": 342, "filename": "elem.36.wasm", "text": "constant expression required", "module_type": "binary"}, 
  {"type": "module", "line": 357, "filename": "elem.37.wasm"}, 
  {"type": "assert_return", "line": 368, "action": {"type": "invoke", "field": "call-overwritten", "args": []}, "expected": [{"type": "i32", "value": "66"}]}, 
  {"type": "module", "line": 370, "filename": "elem.38.wasm"}, 
  {"type": "assert_return", "line": 381, "action": {"type": "invoke", "field": "call-overwritten-element", "args": []}, "expected": [{"type": "i32", "value": "66"}]}, 
  {"type": "module", "line": 385, "name": "$module1", "filename": "elem.39.wasm"}, 
  {"type": "register", "line": 403, "name": "$module1", "as": "module1"}, 
  {"type": "assert_trap", "line": 405, "action": {"type": "invoke", "module": "$module1", "field": "call-7", "args": []}, "text": "uninitialized element", "expected": [{"type": "i32"}]}, 
  {"type": "assert_return", "line": 406, "action": {"type": "invoke", "module": "$module1", "field": "call-8", "args": []}, "expected": [{"type": "i32", "value": "65"}]}, 
  {"type": "assert_return", "line": 407, "action": {"type": "invoke", "module": "$module1", "field": "call-9", "args": []}, "expected": [{"type": "i32", "value": "66"}]}, 
  {"type": "module", "line": 409, "name": "$module2", "filename": "elem.40.wasm"}, 
  {"type": "assert_return", "line": 418, "action": {"type": "invoke", "module": "$module1", "field": "call-7", "args": []}, "expected": [{"type": "i32", "value": "67"}]}, 
  {"type": "assert_return", "line": 419, "action": {"type": "invoke", "module": "$module1", "field": "call-8", "args": []}, "expected": [{"type": "i32", "value": "68"}]}, 
  {"type": "assert_return", "line": 420, "action": {"type": "invoke", "module": "$module1", "field": "call-9", "args": []}, "expected": [{"type": "i32", "value": "66"}]}, 
  {"type": "module", "line": 422, "name": "$module3", "filename": "elem.41.wasm"}, 
  {"type": "assert_return", "line": 431, "action": {"type": "invoke", "module": "$module1", "field": "call-7", "args": []}, "expected": [{"type": "i32", "value": "67"}]}, 
  {"type": "assert_return", "line": 432, "action": {"type": "invoke", "module": "$module1", "field": "call-8", "args": []}, "expected": [{"type": "i32", "value": "69"}]}, 
  {"type": "assert_return", "line": 433, "action": {"type": "invoke", "module": "$module1", "field": "call-9", "args": []}, "expected": [{"type": "i32", "value": "70"}]}]}
